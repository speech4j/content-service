plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "2.8"
}

group = 'com.speech4j'
version = '2.2.7 (SNAPSHOT)'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.junit:junit-bom:5.6.0'
        mavenBom 'org.testcontainers:testcontainers-bom:1.13.0'
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springdoc:springdoc-openapi-ui:1.3.0'
    implementation 'io.vavr:vavr:0.10.2'
    implementation 'com.amazonaws:aws-java-sdk:1.11.762'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.3.1'
    implementation 'org.springframework.hateoas:spring-hateoas:1.0.4.RELEASE'
    implementation 'org.springframework.plugin:spring-plugin-core:2.0.0.RELEASE'


    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    testImplementation "com.github.tomakehurst:wiremock-jre8:2.26.3"
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "speech4j_content-service"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/text.xml")
        html.enabled false
        csv.enabled false
    }
}

project.tasks["sonarqube"].dependsOn "jacocoTestReport"